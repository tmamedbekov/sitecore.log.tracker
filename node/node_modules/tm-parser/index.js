var str = data.split(/\n(?=\d+ \d{2}:\d{2}:\d{2}\b)/g);
var output="";
var index = 0;
var aLine = str[index];
var fileName;
output += '[';

while (aLine !== 'undefined' && aLine != null)
{
    var anonymous = /.*Anonymous.*/g;
    var isAnonymous = anonymous.test(aLine);
    if (!isAnonymous)
    {
        var aaa = /new: (.|\n)*?, old:/g; // New Text
        var hhh = /old:.*/g; // Old Text
        var a, h, a1, h1;
        output += "{\n";
        if ((a = aaa.exec(aLine)) !== null)
        {
            a.forEach((aa, groupIndex) => {
              output = output+`"Module":"${aa}",\n`;
              });
        }
        else {output += '"NewText+": "blank",\n';}

        if ((h = hhh.exec(aLine)) !== null)
        {
            h.forEach((hh, groupIndex) => {
                var old = /old: /g;
                h1 = hh.split(old)[1];
                output = output+'"OldText":"'+h1+'"\n},';
            });
        }
        else if ((h = hhhh.exec(aLine)) !== null)
        {
            h.forEach((hh, groupIndex) => {
              var oldTextSplit = /    -> Old: /g;
              h1 = hh.split(oldTextSplit)[1];
              h1 = h1.replace(/="/g, '=\\"');
              h1 = h1.replace(/">/g, '=\\">');
              h1 = h1.replace(/<\//g, '<\\/');
              output = output+'"OldText":"'+h1+'"\n},';
            });
        }
        else {
          output += '"OldText": "blank"\n},';
        }
    }
}
